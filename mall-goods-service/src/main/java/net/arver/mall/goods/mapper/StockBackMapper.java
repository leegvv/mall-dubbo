package net.arver.mall.goods.mapper;

import java.util.List;
import net.arver.mall.goods.model.StockBack;
import net.arver.mall.goods.model.StockBackExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface StockBackMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @SelectProvider(type=StockBackSqlProvider.class, method="countByExample")
    long countByExample(StockBackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @DeleteProvider(type=StockBackSqlProvider.class, method="deleteByExample")
    int deleteByExample(StockBackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @Delete({
        "delete from tb_stock_back",
        "where order_id = #{orderId,jdbcType=VARCHAR}",
          "and sku_id = #{skuId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(@Param("orderId") String orderId, @Param("skuId") String skuId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @Insert({
        "insert into tb_stock_back (order_id, sku_id, ",
        "num, status, create_time, ",
        "back_time)",
        "values (#{orderId,jdbcType=VARCHAR}, #{skuId,jdbcType=VARCHAR}, ",
        "#{num,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{backTime,jdbcType=TIMESTAMP})"
    })
    int insert(StockBack record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @InsertProvider(type=StockBackSqlProvider.class, method="insertSelective")
    int insertSelective(StockBack record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @SelectProvider(type=StockBackSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="sku_id", property="skuId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="back_time", property="backTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<StockBack> selectByExample(StockBackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @Select({
        "select",
        "order_id, sku_id, num, status, create_time, back_time",
        "from tb_stock_back",
        "where order_id = #{orderId,jdbcType=VARCHAR}",
          "and sku_id = #{skuId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="sku_id", property="skuId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="num", property="num", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="back_time", property="backTime", jdbcType=JdbcType.TIMESTAMP)
    })
    StockBack selectByPrimaryKey(@Param("orderId") String orderId, @Param("skuId") String skuId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @UpdateProvider(type=StockBackSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") StockBack record, @Param("example") StockBackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @UpdateProvider(type=StockBackSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") StockBack record, @Param("example") StockBackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @UpdateProvider(type=StockBackSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(StockBack record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_stock_back
     *
     * @mbg.generated Wed Jul 08 23:31:15 CST 2020
     */
    @Update({
        "update tb_stock_back",
        "set num = #{num,jdbcType=INTEGER},",
          "status = #{status,jdbcType=CHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "back_time = #{backTime,jdbcType=TIMESTAMP}",
        "where order_id = #{orderId,jdbcType=VARCHAR}",
          "and sku_id = #{skuId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(StockBack record);
}
